############################
#
# Flags Script
# Coded by: Christopher L. Winn
# Version 1.0
#
#	To use this script simply fill in the variable(s) below
#	If you want to disable certain features read the comments on how to change it
#
############################
# Flag: Variables
# Section
############################
DEFAULT_FLAG_VARIABLES="$HOME/.bash_custom/bin/lib/script/_flags.variables"
#### rsync - script variables
    if [ -f $DEFAULT_FLAG_VARIABLES ]; then
		verbose.print "# Setting the script flag variables from '$DEFAULT_FLAG_VARIABLES'."
		. $DEFAULT_FLAG_VARIABLES
	else
		error.filenotfound $DEFAULT_FLAG_VARIABLES
    fi

############################
########## BEGIN: Flags
############################
	############################
	# Default: Deals with command line flags as well as setting $FILENAME & $PASSWORD
	# Section
	############################
	while getopts “f:k:vqngh” OPTION
	do
	     case $OPTION in
	         v)
	             VERBOSE_MODE='YES'
	             ;;
	         q)
	             FORCE_QUIET_MODE='YES';
	             VERBOSE_MODE='NO'
	             ;;
	         n)
	             NON_INTERACTIVE_MODE='YES'
	             ;;
	         g)
	             GROWL_NOTIFICATIONS='YES'
	             ;;
	         h)
	             error.usage.filenamepassword
	             exit 1
	             ;;
	         f)
	             FILENAME=$OPTARG
	             ;;
	         k)
	             PASSWORD=$OPTARG
	             ;;
	         ?)
	             error.usage.filenamepassword
	             exit
	             ;;
	     esac
	done
	verbose.print "# I got past FILENAME & PASSWORD the while loop."

	if [[ -z $FILENAME ]] || [[ -z $PASSWORD ]]; then
	     error.usage.filenamepassword
	fi
	verbose.print "# I got past the FILENAME & PASSWORD check."

############################
########## END: Flags
############################


############################
# Script: Verification
# Section
############################
	############################
	# Script: FILENAME verification
	# Section
	############################
	FILENAME_SCRIPT="$HOME/.bash_custom/bin/lib/script/_filename"
	#### script - FILENAME
	    if [ -f $FILENAME_SCRIPT ]; then
			verbose.print "# Importing filename script from '$FILENAME_SCRIPT'."
			. $FILENAME_SCRIPT
		else
			error.filenotfound $FILENAME_SCRIPT
	    fi

	############################
	# Script: PASSWORD verification
	# Section
	############################
	FILENAME_SCRIPT="$HOME/.bash_custom/bin/lib/script/_password"
	#### script - FILENAME
	    if [ -f $FILENAME_SCRIPT ]; then
			verbose.print "# Importing password script from '$FILENAME_SCRIPT'."
			. $FILENAME_SCRIPT
		else
			error.filenotfound $FILENAME_SCRIPT
	    fi
