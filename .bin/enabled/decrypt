#!/bin/bash


############################
#
# Decryption Script
# Coded by chriswinn
# Version 2.0
#
#	To use this DECRYPT script simply fill in the variable below
#	If you want to disable certain features read the comments on how to change it
#
############################
########## BEGIN: setting up Decryption
############################
	############################
	# Update: Default Decryption Variables
	# Section
	############################
	SCRIPT_NAME=Decrypt

	############################
	# Update: Default Imports
	# Section
	############################
	DEFAULT_DECRYPTION_IMPORTS="$HOME/.bin/lib/cipher/_decryption.import"
	#### rsync - script settings
	    if [ -f $DEFAULT_DECRYPTION_IMPORTS ]; then
			verbose.print "# Importing rsync default settings from '$DEFAULT_DECRYPTION_IMPORTS'."
			. $DEFAULT_DECRYPTION_IMPORTS
		else
			error.filenotfound $DEFAULT_DECRYPTION_IMPORTS
	    fi

############################
########## END: setting up Decryption
############################


############################
########## BEGIN: Decryption
############################
	############################
	# Decryption: Source File
	# Section
	############################
	# This variable sets the directory or file to DECRYPT
	#$DECRYPTME
		############################
		# FILENAME & DIRECTORY: Check
		# Section
		############################
		if [ ! -z $FILENAME_VERIFIED ]; then
			#This variable sets the FILENAME to decrypt.
			DECRYPTME=("$FILENAME_VERIFIED")
		elif [ ! -z $DIRECTORY_VERIFIED ]; then
			#This variable sets the DIRECTORY to decrypt.
			DECRYPTME=("$DIRECTORY_VERIFIED")
		fi

	################################################################################
	# Decryption: Password
	# Section
	################################################################################
	# This variable sets the password to use as the encryption key
	#ENCRYPTPASS=("-k $PASS")

############################
# Decrypt: Actual Command
# Section
############################
#### Decryption - actual command
	# Build the actual command
	# NOTE the specific path to the "special" version of rsync
	#COMMAND=("/usr/bin/rsync $OPTS $EXCLUDES $DECRYPTME $DECRYPTDEST")
	#COMMAND=("openssl enc -e -a -salt -aes-256-cbc -in $DECRYPTME -k $ENCRYPTPASS")
	COMMAND=("openssl $DECRYPT_OPTS -in $DECRYPTME -out $DECRYPTME-un.tar.gz")

	############################
	# Script: Default Command
	# Section
	############################
	DEFAULT_SCRIPT_COMMAND="$HOME/.bin/lib/script/_command.default"
	#### rsync - script settings
	    if [ -f $DEFAULT_SCRIPT_COMMAND ]; then
			verbose.print "# Importing rsync default settings from '$DEFAULT_SCRIPT_COMMAND'."
			. $DEFAULT_SCRIPT_COMMAND
		else
			error.filenotfound $DEFAULT_SCRIPT_COMMAND
	    fi
	
		#Removing the encrypted files
		if [ "$REMOVEENCRYPTED" = "YES" ]; then
			growl.notification "Removing $UNENCRYPTEDARCHIVE"
			rm $DECRYPTME
		fi

	# the end.
	
############################
########## END: Decryption
############################
